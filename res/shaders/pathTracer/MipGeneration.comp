#version 450
layout (local_size_x = 1) in;
layout (local_size_y = 1) in;
layout (local_size_z = 1) in;

layout(binding = 0, set=0, r8ui) uniform readonly uimage3D inTexture;
layout(binding = 1, set=0, r8ui) uniform writeonly uimage3D outTexture;

void main()
{
    ivec3 coord = ivec3(gl_GlobalInvocationID);
    uint colors[8];
    uint count[8];
    colors[0]=imageLoad(inTexture, (coord*2)).r;
    colors[1]=imageLoad(inTexture, (coord*2)+ivec3(1, 0, 0)).r;
    colors[2]=imageLoad(inTexture, (coord*2)+ivec3(1, 1, 0)).r;
    colors[3]=imageLoad(inTexture, (coord*2)+ivec3(1, 1, 1)).r;
    colors[4]=imageLoad(inTexture, (coord*2)+ivec3(0, 1, 1)).r;
    colors[5]=imageLoad(inTexture, (coord*2)+ivec3(0, 0, 1)).r;
    colors[6]=imageLoad(inTexture, (coord*2)+ivec3(1, 0, 1)).r;
    colors[7]=imageLoad(inTexture, (coord*2)+ivec3(0, 1, 0)).r;
    int c=0;
    for (int i = 0;i<8;i++)
    {
        if (colors[i]!=0)
        {
            for (int j = 0;j<8;j++)
            {
                count[i]+=int(colors[i]==colors[j]);
            }
            if (count[i]>count[c])
            {
                c=i;
            }
        }
    }
    imageStore(outTexture, coord, uvec4(colors[c], 0., 0., 0.));
}
